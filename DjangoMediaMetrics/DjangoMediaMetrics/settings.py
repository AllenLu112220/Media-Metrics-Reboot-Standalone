"""
Django settings for DjangoMediaMetrics project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import logging
import smtplib
import ssl
from dotenv import load_dotenv
import os

# Load environment variables from .env file
load_dotenv()

# Retrieve OpenAI API key from environment variables
# OPENAI_API_KEY = os.getenv('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')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-%)7p-!xv0x+=12fb=+z!*rea3i!qr5%g1=tzmj8k71-1ab!m&5"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['52.6.97.91','localhost']


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "authapp",
    "databaseApp",
    "fileupload",
]


AUTH_USER_MODEL = 'authapp.CustomUser'


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]
CORS_ALLOW_ALL_ORIGINS = True


CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://localhost:8000',
    'http://52.6.97.91:3000',
]
CSRF_COOKIE_HTTPONLY = False
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:3000',
    'http://52.6.97.91:3000',
    'http://localhost:8000',
]

logging.basicConfig(level=logging.DEBUG)
smtplib.SMTP.debuglevel = 1
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',  # Ensure your custom logs show up
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {  # Suppress SQL logging
            'level': 'ERROR',  # Change to ERROR to suppress non-error SQL logs
            'handlers': ['console'],
            'propagate': False,  # Prevent it from propagating to parent loggers
        },
        'django': {  # General Django logs
            'level': 'INFO',
            'handlers': ['console'],
            'propagate': False,
        },
        'your_app_logger': {  # Custom logger for your app (replace with your app's logger name)
            'level': 'DEBUG',  # Keep DEBUG level for your logs
            'handlers': ['console'],
            'propagate': False,
        },
    },
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.blue-marble.com'
EMAIL_PORT = 1025
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'dash.hound@blue-marble.com' 
EMAIL_HOST_PASSWORD = '2019*Sushi'

ROOT_URLCONF = "DjangoMediaMetrics.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "DjangoMediaMetrics.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "dbmaster",
        "USER" : "dbmasteruser",
        "PASSWORD" : "(kHLE#C#N1C$UcGWzCUZiR{1eqnyCNfp",
        "HOST" : "ls-2ad4d1750c626ca95e3d2ee91045ebaf94394311.cn5ycdfnko6g.us-east-1.rds.amazonaws.com",
        "PORT" : "3306",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
